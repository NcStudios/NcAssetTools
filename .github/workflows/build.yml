name: Build

on:
  schedule:
    - cron: '0 12 * * 5'
  pull_request:
    branches: [ release, vnext ]
    paths-ignore:
      - '**/*.md'
      - '**/*.txt'
      - '**/*.config'
      - '**/*.ini'
  workflow_dispatch:
    inputs:
      createRelease:
        required: false
        type: boolean

env:
  VERSION: '4.0.0'

jobs:
  Build:
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-2022
            generator: "Visual Studio 17 2022"
            artifactName: "nc-convert-windows-x64"
          - name: Linux
            os: ubuntu-22.04
            generator: "Unix Makefiles"
            env: "CXX=/usr/bin/g++-12"
            definitions: "-DCMAKE_BUILD_TYPE=Debug"
            artifactName: "nc-convert-ubuntu22.04-x64"

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3

      - name: Setup MSVC
        if: matrix.name == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Setup Artifact Cache
        id: cache
        uses: actions/cache@v3
        with:
          path: artifacts/nc-convert.exe
          key: ${{ runner.os }}_cache_key

      - name: Configure
        run: ${{ matrix.env }} cmake -G "${{ matrix.generator }}" -S ./ -B build ${{ matrix.definitions }} -DCMAKE_INSTALL_PREFIX=install

      - name: Build
        run: cmake --build build --target install --config Debug

      - name: Run Tests
        run: ctest --test-dir build/test --output-on-failure --output-junit TestResults.xml

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }}-TestResults
          path: build/test/TestResults.xml

      - name: Copy Artifacts to Cache
        if: steps.cache.output.cache-hit != true && matrix.name == 'Windows'
        run: |
          if (!(Test-Path artifacts)) {
            New-Item artifacts -ItemType Directory
          }
          Copy-Item "install/bin/nc-convert.exe" -Destination "artifacts/"

      - name: Copy Artifacts to Cache
        if: steps.cache.output.cache-hit != true && matrix.name == 'Linux'
        run: |
          if [ ! -d artifacts ]
          then
              mkdir artifacts
          fi
          cp install/bin/nc-convert artifacts

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifactName }}
          path: |
            artifacts/nc-convert*

  Publish-Test-Results:
    runs-on: ubuntu-latest
    needs: [Build]
    permissions:
      checks: write
      pull-requests: write
    if: always()
    steps:
    - name: Download Results
      uses: actions/download-artifact@v3
      with:
        path: artifacts
    - name: Publish Results
      uses: mikepenz/action-junit-report@v3
      if: always()
      with:
        report_paths: 'artifacts/**/*.xml'
